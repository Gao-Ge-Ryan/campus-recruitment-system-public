<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caohao.dao.EmploymentUserDao">

    <resultMap type="com.caohao.pojo.model.EmploymentUserModel" id="EmploymentUserMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="employmentId" column="employment_id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="introduce" column="introduce" jdbcType="VARCHAR"/>
        <result property="resume" column="resume" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
        <result property="replyTime" column="reply_time" jdbcType="INTEGER"/>
        <result property="replyContent" column="reply_content" jdbcType="VARCHAR"/>
        <result property="replyUser" column="reply_user" jdbcType="VARCHAR"/>
        <result property="replyStatus" column="reply_status" javaType="com.caohao.common.enums.impl.EmploymentReplyStatus" typeHandler="com.caohao.config.EnumValueTypeHandler"/>
        <result property="userStatus" column="user_status" javaType="com.caohao.common.enums.impl.EmploymentUserStatus" typeHandler="com.caohao.config.EnumValueTypeHandler"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="EmploymentUserMap">
        select
          id, employment_id, user_id, name, phone, introduce, resume, create_time, deleted, reply_time, reply_content, reply_user, reply_status, user_status
        from employment_user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmploymentUserMap">
        select
          id, employment_id, user_id, name, phone, introduce, resume, create_time, deleted, reply_time, reply_content, reply_user, reply_status, user_status
        from employment_user
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="employmentId != null and employmentId != ''">
                and employment_id = #{employmentId}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="name != null and name != ''">
                and name like "%${name}%"
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="introduce != null and introduce != ''">
                and introduce = #{introduce}
            </if>
            <if test="resume != null and resume != ''">
                and resume = #{resume}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
            <if test="replyTime != null">
                and reply_time = #{replyTime}
            </if>
            <if test="replyContent != null and replyContent != ''">
                and reply_content = #{replyContent}
            </if>
            <if test="replyUser != null and replyUser != ''">
                and reply_user = #{replyUser}
            </if>
            <if test="replyStatus != null">
                and reply_status = #{replyStatus,typeHandler=com.caohao.config.EnumValueTypeHandler}
            </if>
            <if test="userStatus != null">
                and user_status = #{userStatus,typeHandler=com.caohao.config.EnumValueTypeHandler}
            </if>
            <if test="ids != null and ids.size() > 0">
                and employment_id in
                <foreach collection="ids" close=")" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <select id="getByUser" resultMap="EmploymentUserMap">
        select * from employment_user where user_id  = #{username} order by create_time DESC
    </select>


    <!--新增所有列-->
    <insert id="insert">
        insert into employment_user(id, employment_id, user_id, name, phone, introduce, resume, create_time, deleted, reply_time, reply_content, reply_user, reply_status, user_status)
        values (#{id}, #{employmentId}, #{userId}, #{name}, #{phone}, #{introduce}, #{resume}, #{createTime}, #{deleted}, #{replyTime}, #{replyContent}, #{replyUser}, #{replyStatus,typeHandler=com.caohao.config.EnumValueTypeHandler}, #{userStatus,typeHandler=com.caohao.config.EnumValueTypeHandler})
    </insert>

    <insert id="insertBatch" >
        insert into employment_user(id, employment_id, user_id, name, phone, introduce, resume, create_time, deleted, reply_time, reply_content, reply_user, reply_status, user_status)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.id}, #{entity.employmentId}, #{entity.userId}, #{entity.name}, #{entity.phone}, #{entity.introduce}, #{entity.resume}, #{entity.createTime}, #{entity.deleted}, #{entity.replyTime}, #{entity.replyContent}, #{entity.replyUser}, #{entity.replyStatus}, #{entity.userStatus})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch">
        insert into employment_user(employment_id, user_id, name, phone, introduce, resume, create_time, deleted, reply_time, reply_content, reply_user, reply_status, user_status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.employmentId}, #{entity.userId}, #{entity.name}, #{entity.phone}, #{entity.introduce}, #{entity.resume}, #{entity.createTime}, #{entity.deleted}, #{entity.replyTime}, #{entity.replyContent}, #{entity.replyUser}, #{entity.replyStatus}, #{entity.userStatus})
        </foreach>
        on duplicate key update
        employment_id = values(employment_id),
        user_id = values(user_id),
        name = values(name),
        phone = values(phone),
        introduce = values(introduce),
        resume = values(resume),
        create_time = values(create_time),
        deleted = values(deleted),
        reply_time = values(reply_time),
        reply_content = values(reply_content),
        reply_user = values(reply_user),
        reply_status = values(reply_status),
        user_status = values(user_status)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update employment_user
        <set>
            <if test="employmentId != null and employmentId != ''">
                employment_id = #{employmentId},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="introduce != null and introduce != ''">
                introduce = #{introduce},
            </if>
            <if test="resume != null and resume != ''">
                resume = #{resume},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
            <if test="replyTime != null">
                reply_time = #{replyTime},
            </if>
            <if test="replyContent != null and replyContent != ''">
                reply_content = #{replyContent},
            </if>
            <if test="replyUser != null and replyUser != ''">
                reply_user = #{replyUser},
            </if>
            <if test="replyStatus != null">
                reply_status = #{replyStatus,typeHandler=com.caohao.config.EnumValueTypeHandler},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,typeHandler=com.caohao.config.EnumValueTypeHandler},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from employment_user where id = #{id}
    </delete>
    <delete id="deleteByEmployId">
        delete from employment_user where employment_id = #{employmentId}
    </delete>

</mapper>

